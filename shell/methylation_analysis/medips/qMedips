#!/bin/bash

#creates and submits scripts to 
#calculate MEDIPS methylation profiles for each condition 
#and corresponding BigWig files to open in UCSC browser

#also creates counts table
#to be used as input to DESeq  

USAGE="qMedips -i <input_dir> -n <project_name> -r <sample_info> -l <extension_length> -p <TRUE_for_paired> -w <window_size>"

NOW="date +%Y-%m-%d%t%T%t"

TODAY=`date +%Y-%m-%d`
#TODAY=2015-10-26

R_VERSION=3.0.1

QUEUE=pqcgi
GROUPVOL_TGU=/project/tgu
BASEDIR="$( cd "$( dirname "$0" )" && pwd )"
DEPLOYMENT_SERVER=eliot.med.ic.ac.uk
DEPLOYMENT_BASE_DIR=/www/html/report
EXTEND=200
PAIRED=TRUE
WINDOW=200
CHROM_SIZES=/groupvol/cgi/resources/reference/eukaryote/human/hg19/hg19.chrom.sizes

#parse command line args
while getopts "i:n:r:l:p:w:h" option; do
    case "$option" in
	
	i) INPUT_DIR="$OPTARG";;
	n) PROJECT="$OPTARG";;
	r) SAMPLE_INFO="$OPTARG";;
	l) EXTEND="$OPTARG";;
	p) PAIRED="$OPTARG";;
	w) WINDOW="$OPTARG";;
	h) cat $USAGE; exit 0;;
	[?]) cat $USAGE; exit 1;;

esac
done

# check for presence of required input parameters
if [ -z $INPUT_DIR ] || [ -z $PROJECT ] || [ -z $SAMPLE_INFO ]; then
        echo "Error: Required input argument is missing."
        cat $USAGE
        exit 1
fi

mkdir -p $GROUPVOL_TGU/results/$PROJECT/medips
chmod 770 $GROUPVOL_TGU/results/$PROJECT/medips

mkdir -p $GROUPVOL_TGU/results/$PROJECT/medips/$TODAY
chmod 770 $GROUPVOL_TGU/results/$PROJECT/medips/$TODAY

mkdir -p $GROUPVOL_TGU/results/$PROJECT/medips/$TODAY/WIG
chmod 770 $GROUPVOL_TGU/results/$PROJECT/medips/$TODAY/WIG

mkdir -p $GROUPVOL_TGU/runs/$PROJECT/medips
chmod 770 $GROUPVOL_TGU/runs/$PROJECT/medips

mkdir -p $GROUPVOL_TGU/runs/$PROJECT/medips/$TODAY
chmod 770 $GROUPVOL_TGU/runs/$PROJECT/medips/$TODAY

MEDIPS_RESULTS_DIR=$GROUPVOL_TGU/results/$PROJECT/medips/$TODAY
MEDIPS_RUNS_DIR=$GROUPVOL_TGU/runs/$PROJECT/medips/$TODAY

#create directory on eliot
SUMMARY_DEPLOYMENT=$DEPLOYMENT_BASE_DIR/project/$PROJECT/medips/$TODAY
ssh $DEPLOYMENT_SERVER "mkdir -p $SUMMARY_DEPLOYMENT" > /dev/null 2>&1
ssh $DEPLOYMENT_SERVER "chmod 775 $DEPLOYMENT_BASE_DIR/project/$PROJECT/medips" > /dev/null 2>&1
ssh $DEPLOYMENT_SERVER "chmod 775 $DEPLOYMENT_BASE_DIR/project/$PROJECT/medips/$TODAY" > /dev/null 2>&1

#create encrypted directory to save BigWig files accessable by user
RANDOM15=`date | md5sum | head -c 15`
ENC_DIR="/data/www/html/report/data/$RANDOM15"
ssh $DEPLOYMENT_SERVER "mkdir -p $ENC_DIR" > /dev/null 2>&1
ssh $DEPLOYMENT_SERVER "chmod 775 $ENC_DIR" > /dev/null 2>&1
echo "Encripted directory $ENC_DIR"

#round chromosome sizes to fit with medips profiles
cat $CHROM_SIZES | perl -e '$window = shift; while(<>){chomp(); if (/(\S+)\t(\d+)/) {$chrom=$1; $size=$2; $fold=int($size/$window); $size=($fold+1)*$window; print "$chrom\t$size\n";}}' $WINDOW > $MEDIPS_RUNS_DIR/hg19.chrom.sizes
CHROM_SIZES=$MEDIPS_RUNS_DIR/hg19.chrom.sizes

MEDIPS_DEPENDECIES="afterany"

#create MEDIPS methylation profile and bigWig for each condition
for CONDITION in `sed 1d $SAMPLE_INFO | cut -f2 | grep -vP "^$" | sort | uniq `;do

	#create script to submit R script 
	SCRIPT_PATH=$GROUPVOL_TGU/runs/$PROJECT/medips/$TODAY/$PROJECT.$CONDITION.makeWIG.sh
	cp $BASEDIR/makeWIG.sh $SCRIPT_PATH
	chmod 770 $SCRIPT_PATH

	#create R script 
	R_SCRIPT_PATH=$GROUPVOL_TGU/runs/$PROJECT/medips/$TODAY/$PROJECT.$CONDITION.makeWIG.R
	cp $BASEDIR/makeWIG.R $R_SCRIPT_PATH
	chmod 770 $R_SCRIPT_PATH

	sed -i -e "s/#Rversion/${R_VERSION}/" $SCRIPT_PATH
	sed -i -e "s/#inputBam/${INPUT_DIR//\//\\/}/" $SCRIPT_PATH
	sed -i -e "s/#sampleInfo/${SAMPLE_INFO//\//\\/}/" $SCRIPT_PATH
	sed -i -e "s/#Rscript/${R_SCRIPT_PATH//\//\\/}/" $SCRIPT_PATH
	sed -i -e "s/#medipsDir/${MEDIPS_RESULTS_DIR//\//\\/}/" $SCRIPT_PATH
	sed -i -e "s/#encDir/${ENC_DIR//\//\\/}/" $SCRIPT_PATH
	sed -i -e "s/#chromSizes/${CHROM_SIZES//\//\\/}/" $SCRIPT_PATH
	sed -i -e "s/#condition/${CONDITION}/" $SCRIPT_PATH
	sed -i -e "s/#windowSize/${WINDOW}/" $SCRIPT_PATH
	sed -i -e "s/#deploymentServer/${DEPLOYMENT_SERVER}/" $SCRIPT_PATH

	sed -i -e "s/#sampleInfo/${SAMPLE_INFO//\//\\/}/" $R_SCRIPT_PATH
	sed -i -e "s/#medipsDir/${MEDIPS_RESULTS_DIR//\//\\/}/" $R_SCRIPT_PATH
	sed -i -e "s/#extendReads/${EXTEND}/" $R_SCRIPT_PATH
	sed -i -e "s/#pairedReads/${PAIRED}/" $R_SCRIPT_PATH
	sed -i -e "s/#windowSize/${WINDOW}/" $R_SCRIPT_PATH
	sed -i -e "s/#condition/${CONDITION}/" $R_SCRIPT_PATH

	LOG_OUTPUT_PATH=`echo $SCRIPT_PATH | perl -pe 's/\.sh/\.log/g'`
	echo -n "" > $LOG_OUTPUT_PATH
	chmod 660 $LOG_OUTPUT_PATH

	echo "`${NOW}`submitting job script $SCRIPT_PATH "
	JOB_ID=`qsub -q pqcgi -o $LOG_OUTPUT_PATH $SCRIPT_PATH`
	echo "`${NOW}`job ID: $JOB_ID"

	MEDIPS_DEPENDECIES="$MEDIPS_DEPENDECIES:$JOB_ID"

done

#submit summary script
#if job is completed and log file is created in the run directory
#script displays plots and quality metrics on eliot

SUMMARY_SCRIPT_PATH=$GROUPVOL_TGU/runs/$PROJECT/medips/$TODAY/$PROJECT.summary_medipsWIG.pl
cp $BASEDIR/summary_medipsWIG.pl $SUMMARY_SCRIPT_PATH
chmod 770 $SUMMARY_SCRIPT_PATH

sed -i -e "s/#medipsResultsDir/${MEDIPS_RESULTS_DIR//\//\\/}/" $SUMMARY_SCRIPT_PATH
sed -i -e "s/#deploymentServer/${DEPLOYMENT_SERVER//\//\\/}/" $SUMMARY_SCRIPT_PATH
sed -i -e "s/#encDir/${ENC_DIR//\//\\/}/" $SUMMARY_SCRIPT_PATH
sed -i -e "s/#random15/${RANDOM15}/" $SUMMARY_SCRIPT_PATH
sed -i -e "s/#summaryDeployment/${SUMMARY_DEPLOYMENT//\//\\/}/" $SUMMARY_SCRIPT_PATH
sed -i -e "s/#sampleInfo/${SAMPLE_INFO//\//\\/}/" $SUMMARY_SCRIPT_PATH

SUMMARY_LOG_OUTPUT_PATH=`echo $SUMMARY_SCRIPT_PATH | perl -pe 's/\.pl/\.log/g'`
echo -n "" > $SUMMARY_LOG_OUTPUT_PATH
chmod 660 $SUMMARY_LOG_OUTPUT_PATH

echo "`$NOW`submitting summary script: $SUMMARY_SCRIPT_PATH"
SUM_JOB_ID=`qsub -q $QUEUE -o $SUMMARY_LOG_OUTPUT_PATH -j oe -W depend=$MEDIPS_DEPENDECIES -M igf@imperial.ac.uk $SUMMARY_SCRIPT_PATH` 
echo "`$NOW`job ID: $SUM_JOB_ID"


#create counts table to be used as input to DESeq  
SCRIPT_PATH=$GROUPVOL_TGU/runs/$PROJECT/medips/$TODAY/$PROJECT.makeCountsTable.sh
cp $BASEDIR/makeCountsTable.sh $SCRIPT_PATH
chmod 770 $SCRIPT_PATH

sed -i -e "s/#medipsDir/${MEDIPS_RESULTS_DIR//\//\\/}/" $SCRIPT_PATH
sed -i -e "s/#sampleInfo/${SAMPLE_INFO//\//\\/}/" $SCRIPT_PATH
sed -i -e "s/#project/${PROJECT//\//\\/}/" $SCRIPT_PATH

LOG_OUTPUT_PATH=`echo $SCRIPT_PATH | perl -pe 's/\.sh/\.log/g'`
echo -n "" > $LOG_OUTPUT_PATH
chmod 660 $LOG_OUTPUT_PATH

echo "`${NOW}`submitting job script $SCRIPT_PATH "
JOB_ID=`qsub -q pqcgi -W depend=$MEDIPS_DEPENDECIES -o $LOG_OUTPUT_PATH $SCRIPT_PATH`
echo "`${NOW}`job ID: $JOB_ID"






